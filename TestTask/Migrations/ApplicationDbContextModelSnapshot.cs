// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask.Data;

#nullable disable

namespace TestTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2003, 7, 28, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10,
                            ProductName = "Apple",
                            Quantity = 130,
                            Status = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2004, 5, 31, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30,
                            ProductName = "Lemon",
                            Quantity = 2,
                            Status = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2010, 6, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5,
                            ProductName = "Cucumber",
                            Quantity = 10,
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 7,
                            ProductName = "Cabbage",
                            Quantity = 2,
                            Status = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2019, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 8,
                            ProductName = "Onion",
                            Quantity = 6,
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 9, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 9,
                            ProductName = "Carrot",
                            Quantity = 5,
                            Status = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2010, 11, 13, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40,
                            ProductName = "Mango",
                            Quantity = 2,
                            Status = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2003, 3, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45,
                            ProductName = "Orange",
                            Quantity = 5,
                            Status = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 3, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100,
                            ProductName = "Watermelon",
                            Quantity = 1,
                            Status = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2019, 5, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 8,
                            ProductName = "Garlic",
                            Quantity = 12,
                            Status = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2010, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 3,
                            ProductName = "Potato",
                            Quantity = 100,
                            Status = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2006, 9, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 9,
                            ProductName = "Carrot",
                            Quantity = 15,
                            Status = 2,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2003, 5, 30, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 8,
                            ProductName = "Onion",
                            Quantity = 15,
                            Status = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2021, 6, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50,
                            ProductName = "Pumpkin",
                            Quantity = 1,
                            Status = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2003, 12, 21, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100,
                            ProductName = "Watermelon",
                            Quantity = 12,
                            Status = 3,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("TestTask.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@gmail.com",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@gmail.com",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Email = "user3@gmail.com",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "user4@gmail.com",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Email = "user5@gmail.com",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Email = "user6@gmail.com",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Email = "user7@gmail.com",
                            Status = 0
                        });
                });

            modelBuilder.Entity("TestTask.Models.Order", b =>
                {
                    b.HasOne("TestTask.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestTask.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
